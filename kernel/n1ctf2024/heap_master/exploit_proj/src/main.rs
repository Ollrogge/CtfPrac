use std::process::Command;

fn main() {
    let status = Command::new("qemu-system-x86_64")
        .arg("-kernel").arg("../bzImage")
        .arg("-cpu").arg("qemu64,+smep,+smap,+rdrand")
        .arg("-m").arg("512M")
        .arg("-s")
        .arg("-smp").arg("2")
        .arg("-initrd").arg("../my_rootfs.cpio")
        .arg("-append").arg("console=ttyS0 quiet loglevel=3 oops=panic panic_on_warn=1 panic=-1 pti=on page_alloc.shuffle=1 kaslr")
        .arg("-drive").arg("file=../flag,if=virtio,format=raw,readonly=on")
        .arg("-monitor").arg("/dev/null")
        .arg("-nographic")
        .arg("-no-reboot")
        .status()
        .expect("Failed to execute qemu");

    if !status.success() {
        eprintln!("QEMU exited with status: {:?}", status);
    } else {
        println!("QEMU executed successfully");
    }
}
